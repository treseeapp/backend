
## Spring DataSource Properties ##
# Driver que usará Spring, por defecto nosotros usamos "com.mysql.cj.jdbc.Driver".
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# URL de la Base de Datos, por defecto nosotros usamos "localhost". Las propiedades del final se pueden cambiar.
spring.datasource.url = jdbc:mysql://localhost:3306/NOMBRE_BBDD?useSSL=false&createDatabaseIfNotExist=true

# Nombre de Usuario para acceder a la Base de Datos.
spring.datasource.username = USUARIO_BBDD

# COntrasña para acceder a la Base de Datos.
spring.datasource.password = CONTRASEÑA_BBDD

## Hibernate Properties ##
# Dialecto de SQL que usará Hibernate, por defecto, nosotros usamos "org.hibernate.dialect.MySQL5InnoDBDialect".
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Si se encuentra en "true" mostrará todas las queries SQL que realice Hibernate.
spring.jpa.show-sql = false

# Si se encuentra en "true" y también "show-sql", mostrará las queries SQL de una manera más bonita y facil de leer.
spring.jpa.properties.hibernate.format_sql = false

# Indica que acción realizará Hibernate al arrancar, valores posibles: create, create-drop, validate, update, none
spring.jpa.hibernate.ddl-auto =

# URL que permitirá CORS, por ejemplo "http:localhost:8888"
cors.allowed =

# Secret que codificara y descodificara JWT
jwt.secret =

# Directorio de upload para las fotos
upload.directory=

# Endpoint de Amazon
amazon.endpointUrl=

# AccesKey de Amazon
amazon.accessKey=

# SecretKey de Amazon
amazon.secretKey=

# Nombre del bucket de Amazon
amazon.bucketName=

# TAMAÑO MAX DE IMAGENES QUE SE PUEDEN HACER UPLOAD
multipart.max-file-size=10MB
multipart.max-request-size=10MB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
